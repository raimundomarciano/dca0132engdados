services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - app_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - app_network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    command: ["mongod", "--replSet", "rs0"]
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network
    restart: always


  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    build:
      context: .
      dockerfile: Dockerfile-spark
    environment:
      - SPARK_MODE=master
      - SPARK_EXTRA_CLASSPATH=/opt/bitnami/spark/jars/postgresql-42.7.5.jar
    ports:
      - "7077:7077"
      - "8080:8080"
    networks:
      - app_network
    depends_on:
      - kafka
      - mongodb

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    build:
      context: .
      dockerfile: Dockerfile-spark
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    networks:
      - app_network
  
  debezium:
    image: debezium/connect:2.4
    container_name: debezium
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: debezium
      CONFIG_STORAGE_TOPIC: debezium_config
      OFFSET_STORAGE_TOPIC: debezium_offset
      STATUS_STORAGE_TOPIC: debezium_status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: debezium
      CONNECT_PLUGIN_PATH: /kafka/connect
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - mongodb
    networks:
      - app_network

  flask-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-api
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    networks:
      - app_network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: default_db
    ports:
      - "5432:5432"
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  mongo_data:
  postgres_data:

networks:
  app_network:
    driver: bridge
